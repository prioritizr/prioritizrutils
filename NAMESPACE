# Generated by roxygen2: do not edit by hand

S3method(as.list,Parameters)
S3method(boundary_matrix,Raster)
S3method(boundary_matrix,SpatialLines)
S3method(boundary_matrix,SpatialPoints)
S3method(boundary_matrix,SpatialPolygons)
S3method(branch_matrix,default)
S3method(branch_matrix,phylo)
S3method(compile,ConservationProblem)
S3method(connected_matrix,Raster)
S3method(connected_matrix,SpatialLines)
S3method(connected_matrix,SpatialPoints)
S3method(connected_matrix,SpatialPolygons)
S3method(marxan_problem,character)
S3method(marxan_problem,data.frame)
S3method(marxan_problem,default)
S3method(print,ArrayParameter)
S3method(print,ConservationModifier)
S3method(print,ConservationProblem)
S3method(print,Id)
S3method(print,OptimizationProblem)
S3method(print,ScalarParameter)
S3method(print,Solver)
S3method(problem,Raster)
S3method(problem,Spatial)
S3method(problem,data.frame)
export("%>%")
export("%T>%")
export()
export(ArrayParameter)
export(Collection)
export(ConservationModifier)
export(ConservationProblem)
export(Constraint)
export(Decision)
export(Objective)
export(OptimizationProblem)
export(Parameter)
export(Parameters)
export(Penalty)
export(ScalarParameter)
export(Solver)
export(Target)
export(add_absolute_targets)
export(add_binary_decision)
export(add_boundary_penalties)
export(add_connected_constraints)
export(add_connectivity_penalties)
export(add_corridors_constraints)
export(add_default_decision)
export(add_default_objective)
export(add_default_solver)
export(add_default_targets)
export(add_feature_weights)
export(add_gurobi_solver)
export(add_locked_in_constraints)
export(add_locked_out_constraints)
export(add_loglinear_targets)
export(add_lpsymphony_solver)
export(add_max_cover_objective)
export(add_max_features_objective)
export(add_max_phylo_objective)
export(add_min_set_objective)
export(add_proportion_decision)
export(add_relative_targets)
export(add_rsymphony_solver)
export(add_semicontinuous_decision)
export(as.Id.character)
export(as.id)
export(binary_parameter)
export(binary_parameter_array)
export(boundary_matrix)
export(branch_matrix)
export(compile)
export(connected_matrix)
export(distribute_load)
export(fast_extract)
export(get_number_of_threads)
export(integer_parameter)
export(integer_parameter_array)
export(intersecting_units)
export(is.Id)
export(is.Waiver)
export(is.parallel)
export(marxan_problem)
export(new_id)
export(new_optimization_problem)
export(numeric_parameter)
export(numeric_parameter_array)
export(parameters)
export(pproto)
export(problem)
export(proportion_parameter)
export(proportion_parameter_array)
export(rij_matrix)
export(run_calculations)
export(set_number_of_threads)
export(simulate_cost)
export(simulate_data)
export(simulate_species)
export(solve)
export(waiver)
exportMethods(A)
exportMethods(add_absolute_targets)
exportMethods(add_locked_in_constraints)
exportMethods(add_locked_out_constraints)
exportMethods(add_relative_targets)
exportMethods(col_ids)
exportMethods(fast_extract)
exportMethods(intersecting_units)
exportMethods(lb)
exportMethods(modelsense)
exportMethods(ncell)
exportMethods(ncol)
exportMethods(nrow)
exportMethods(number_of_features)
exportMethods(number_of_planning_units)
exportMethods(obj)
exportMethods(rhs)
exportMethods(rij_matrix)
exportMethods(row_ids)
exportMethods(sense)
exportMethods(solve)
exportMethods(ub)
exportMethods(vtype)
import(raster)
import(sp)
importFrom(Matrix,solve)
importFrom(magrittr,"%>%")
importFrom(magrittr,"%T>%")
importFrom(raster,ncell)
importFrom(raster,ncol)
importFrom(raster,nrow)
useDynLib(prioritizrutils)
