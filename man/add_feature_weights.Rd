% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_feature_weights.R
\name{add_feature_weights}
\alias{add_feature_weights}
\title{Add feature weights}
\usage{
add_feature_weights(x, weights)
}
\arguments{
\item{x}{\code{\link{ConservationProblem}} object.}

\item{weights}{\code{numeric} weights. Higher values for a feature 
indicate that it is more desireable to represent the feature in a network. 
Weights cannot have negative values.}
}
\value{
\code{\link{ConservationProblem}} object with the weights
  added to it.
}
\description{
Conservation planning problems that aim to maximize the representation of 
features the budget is not high enough. In such budget-limited problems,
it may be desirable to prefer the representation of some features
over other features. Feature weights can be be applied to a conservation
planning problem to favour the representation of some features over other 
other features when making decisions about how the budget should be 
allocated.
}
\details{
Weights can only be applied to a budget-limited 
  type of planning problem (ie. \code{\link{add_maximum_coverage_objective}},
  and \code{\link{add_maximum_representation_objective}}.
}
\examples{
# create problem
p1 <- problem(sim_pu_raster, sim_features) \%>\%
  add_maximum_coverage_objective(budget=5000)

# create weights based on rarity (1/number occurrences)
w <- 1/raster::cellStats(sim_features, 'sum') * 100

# create new problem with added weights according to rarity
p2 <- p1 \%>\% add_feature_weights(w)

# solve solutions
s <- stack(solve(p1), solve(p2))

# plot solutions
plot(s, main = c('equal weights', 'rarity weights'))

}
\seealso{
\code{\link{targets}}.
}
