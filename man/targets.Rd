% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/targets.R
\docType{methods}
\name{targets}
\alias{targets}
\alias{add_relative_targets-method}
\alias{add_relative_targets,ConservationProblem,numeric-method}
\alias{add_relative_targets,ConservationProblem,character-method}
\alias{add_absolute_targets-method}
\alias{add_absolute_targets,ConservationProblem,numeric-method}
\alias{add_absolute_targets,ConservationProblem,character-method}
\alias{add_default_targets}
\alias{add_relative_targets}
\alias{add_relative_targets}
\alias{add_relative_targets}
\alias{add_absolute_targets}
\alias{add_absolute_targets}
\alias{add_absolute_targets}
\alias{add_loglinear_targets}
\title{Targets}
\usage{
add_default_targets(x)

add_relative_targets(x, targets, ...) # x=ConservationProblem, targets=numeric

add_relative_targets(x, targets, ...) # x=ConservationProblem, targets=character

add_absolute_targets(x, targets, ...) # x=ConservationProblem, targets=numeric

add_absolute_targets(x, targets, ...) # x=ConservationProblem, targets=character

add_loglinear_targets(x, lower_bound_amount, lower_bound_target,
  upper_bound_amount, upper_bound_target)
}
\arguments{
\item{x}{\code{\link{ConservationProblem-class}} object.}

\item{lower_bound_amount}{\code{numeric} lower bound for the total amount
of the features.}

\item{lower_bound_target}{\code{numeric} relative target that should be
 applied to features with a total amount that is less
than or equal to \code{lower_bound_amount}.}

\item{upper_bound_amount}{\code{numeric} upper bound for the total amount
of features.}

\item{upper_bound_target}{\code{numeric} relative target that should be
applied to features with a total amount that is greater
than or equal to \code{upper_bound_amount}.}

\item{targets}{\code{numeric} targets for features. If all features should
have the same target, \code{targets} can be a single number. Otherwise,
\code{targets} should be a \code{numeric} \code{vector} specifying a
target for each feature. Alternatively, if the features in
\code{x} were specified using a \code{data.frame} object, then
argument to \code{targets} may refer to a column name.}

\item{...}{not used.}
}
\value{
\code{\link{ConservationProblem-class}} object with the target added
  to it.
}
\description{
Targets are used to specify the minimum amount or proportion of a feature"s
distribution that needs to be protected. Below is a list of different
targets that can be added to a conservation planning \code{\link{problem}}.
}
\details{
\describe{

\item{\code{default_targets}}{The default targets are used when targets
    have not explicitly been set using the above functions. The creators
    of this package do not believe that there can be any sensible default
    targets. Thus relying on the default target will yield an error. }

\item{\code{relative_targets}}{Targets are expressed as a proportion
    (between 0
    and 1) of the maximum level of representation in the study area.
    The argument to \code{x} should have a single value if all features
    have the same target. Otherwise, the vector should have a value for
    each feature. In this case, targets are assigned to features based
    on the their position in the argument to \code{x} and the
    \code{feature} when specifying the problem.}

\item{\code{absolute_targets}}{Targets are expressed as the actual value
    that needs to be represented in the prioritisation. The argument to
    \code{x} is treated the same as for \code{relative_targets}.}

\item{\code{loglinear_targets}}{Targets are expressed as a proportion
    (between 0
    and 1) which is calculated using a log-linear equation and four
    tuning parameters (as used in XXX \emph{et al.} XXX). The first
    tuning parameter specifies the first cut-off range size,
    and the second the second cut-off range size, the third argument
    specifies the target required for species with a range size equal
    to or less than the first cut-off range size, and the fourth
    argument specifies the target required for species with a range
    size equal to or greater than the required range size.}

}
}
\examples{
# create basic problem
p <- problem(sim_pu_raster, sim_features) \%>\%
  add_min_set_objective()

# create problem with added relative targets
p1 <- p \%>\% add_relative_targets(0.1)

# create problem with added absolute targets
p2 <- p \%>\% add_absolute_targets(3)

# create problem with added log-linear target
p3 <- p \%>\% add_loglinear_targets(10, 0.9, 100, 0.2)

\donttest{

# solve solutions
s <- stack(solve(p1), solve(p2), solve(p3))

# plot solutions
plot(s, main=c("relative targets", "absolute targets",
               "loglinear targets"))

}

}
\seealso{
\code{\link{constraints}}, \code{\link{objectives}},
  \code{\link{problem}}, \code{\link{add_feature_weights}}.
}
